<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>
    <property name="logDir" value="logs"/>
    <property name="FILE_LOG_PATTERN"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{80}:%L - %msg%n"></property>
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logDir}/estuary.log</file>
    　　　　<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
    　　　　　　　　　<fileNamePattern>${logDir}/estuary.%d{yyyy-MM-dd}.log</fileNamePattern>
    　　　　　　　　　<maxHistory>5</maxHistory>
    　　　　　　　　　</rollingPolicy>
    <!--　　　　　　　　　<encoder>-->
    <!--　　　　　　　　　　　<pattern>%-4relative [%thread] %-5level %logger{35} - %msg%n</pattern>-->
    <!--　　　　　　　　　</encoder>-->
        <encoder charset="UTF-8">
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <appender name="ERRORFILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${logDir}/error/estuary-error.log</file>
    <!--<append>true</append>-->
    <!--<charset>UTF-8</charset>-->

    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
    <level>ERROR</level>
    </filter>

    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
    <fileNamePattern>${logDir}/error/estuary-error.%d{yyyy-MM-dd}.log</fileNamePattern>
    <maxHistory>5</maxHistory>
    </rollingPolicy>

    <encoder charset="UTF-8">
    <pattern>${FILE_LOG_PATTERN}</pattern>
    </encoder>
    </appender>

    <!--  邮件 -->
    <!-- SMTP server的地址，必需指定。如网易的SMTP服务器地址是： smtp.163.com -->
    <property name="smtpHost" value="owa.finupgroup.com"/>
    <!-- SMTP server的端口地址。默认值：25 -->
    <property name="smtpPort" value="587"/>
    <!-- 发送邮件账号，默认为null -->
    <property name="username" value=""/><!-- 发送人邮箱 -->
    <!-- 发送邮件密码，默认为null -->
    <property name="password" value=""/>
    <!-- 如果设置为true，appender将会使用SSL连接到日志服务器。默认值：false -->
    <property name="SSL" value="false"/>
    <!-- 指定发送到那个邮箱，可设置多个<to>属性，指定多个目的邮箱 -->
    <property name="email_to" value="guofeifei@finupgroup.com"/>
    <!-- 指定发件人名称。如果设置成“Adam Smith &lt;smith@moral.org&gt; ”，则邮件发件人将会是“Adam Smith <smith@moral.org> ” -->
    <property name="email_from" value="logmonitor" />
    <!-- 指定emial的标题，它需要满足PatternLayout中的格式要求。如果设置成“Log: %logger - %msg ”，就案例来讲，则发送邮件时，标题为“【Error】: com.foo.Bar - Hello World ”。 默认值："%logger{20} - %m". -->
    <property name="email_subject" value="【Error】: %logger" />
    <!-- ERROR邮件发送 -->
    <appender name="SENDEMAIL" class="ch.qos.logback.classic.net.SMTPAppender">
        <smtpHost>${smtpHost}</smtpHost>
        <smtpPort>${smtpPort}</smtpPort>
        <username>${username}</username>
        <password>${password}</password>
        <asynchronousSending>false</asynchronousSending>
        <SSL>${SSL}</SSL>
        <to>${email_to}</to>
        <from>${email_from}</from>
        <subject>${email_subject}</subject>
        <layout class="ch.qos.logback.classic.html.HTMLLayout">
            <Pattern>%date%level%thread%logger{0}%line%message</Pattern>
        </layout>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <cyclicBufferTracker class="ch.qos.logback.core.spi.CyclicBufferTracker">
            <!-- send just one log entry per email -->
            <bufferSize>1</bufferSize>
        </cyclicBufferTracker>
    </appender>

    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        　　　　　　<encoder charset="UTF-8">
        <pattern>${FILE_LOG_PATTERN}</pattern>
    </encoder>
    </appender>
    <logger name="com" level="INFO" additivity="true"/>
    <root level="INFO">
    　　　<appender-ref ref="FILE"/>
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="ERRORFILE"/>
        <appender-ref ref="SENDEMAIL"/>
    </root>
</configuration>